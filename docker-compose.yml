services:
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      summarizer:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - bot_network
    restart: always

  summarizer:
    build:
      context: ./summarizer
      dockerfile: Dockerfile
    env_file: .env  # при желании, если что-то нужно из .env
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 300s
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: bot_password
      POSTGRES_DB: telegram_bot
    networks:
      - bot_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot_user"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

networks:
  bot_network:
    driver: bridge
